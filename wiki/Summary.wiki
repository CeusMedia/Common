#summary Overview and Summary of cmClases Wiki.

== Introduction ==
=== What is _cmClasses_ or _class container_ ? ===
The  class container is a class collection of 
  * [http://ceus-media.de/ CeuS Media] developers
  * partner companies
  * community contributors
  * other developers

It contains classes which can be used for software developement with PHP 5.
Most of the classes are used for current projects and can be easily reused. 
Some classes are based upon standalone packages of other developers who published somewhere else but allow to reuse their code.

The class container can be seen as a library and is called _cmClasses_ internally what stands for _CeuS Media class container_.

This library has been published on 24.06.2008 as stable version 0.6.
There will be updates and patches, see [#Maintenance Maintenance].

=== Who can use it ? ===
Although there is a company name inside it is a open source library.
Everybody who wants to create tools or web applications on a web server with PHP 5 can use this library to avoid reinventing the wheel.
It provides classes only, so everyone who can (or is willing to learn) object oriented programming can make use of it.

=== What can it be used for ? ===
This library is a construction kit for software developement with PHP 5.
It can be used for many things, not only for developing software for web applications.

Also:
  * learning object oriented programming
  * using PHP 5 by handling with objects
  * build tools for web and console
  * build tiny, medium, large and hugh applications
  * fast and easy software developement
  * improve quality of existing applications
  * base for own classes

=== Okay, understood. How to start from here ? ===
Read the following article sections:
  * [Installation Installation]
  * [Packages Packages]
  * [Demos Demos]

=== Next steps ===
Now you got the knowledge to use [http://ceus-media.de/ CeuS Media] [[Frameworks|frameworks]] and [[Tools|tools]].

If you got good ideas or like to help us with
  * Classes
  * Manuals in you language
  * Improvement of this documentaion
  * Donations
please visit the [[Contribution]] page.

== Features ==
The library is currently stable in version 0.6.
It will be developed further by CeuS Media, our partners and the community.

At the moment the library holds more than 390 classes in 17 main packages.<br/>
=== Functionality ===
Using this classes you can easily:
  * read and write files of several types (conf,csv,ics,ini,list,log,xml,yaml) and archives (gz,bz,zip,tar)
  * read from and write into databases using PDO or database connection abstraction
  * read and build XML information resources (RSS,ATOM,OPML,WDDX,RDF)
  * read information from URLs using HTTP and also write using FTP
  * handle extended data types (dictionary,tree,graph)
  * build your own service point using Net Services
  * build web applications using one of the includes [[Frameworks|frameworks]]
  * build console applications and daemons / servers
  * create (X)HTML, SVG and Graph and [[http://www.captcha.net/ CAPTCHA]] images
  * solve mathematical problems
and so on...

=== Milestones ===
==== Past ====
  * 0.1: Collection of PHP 4 classes.
  * 0.2: Integration of code documentations for [http://www.phpdoc.org/ phpDocumentor]
  * 0.3: Support of different file types and database management systems
  * 0.4: Integration of [[Frameworks|frameworks]] and introduction of Net Services
  * 0.5: PHP 5 refactoring (mostly XML handling)
  * 0.6: Strict PHP 5 only, new classes based on [http://php.net/spl/ SPL]

==== Future ====
  * 0.7: SVG and features requested or contributed by the community
  * 0.8: Integration of own classes used by tools
  * 0.9: Tidy up, strict code design, code documentations, manuals and unit tests
  * 1.0: Final release version

Do you like to contribute classes or help us and the community to finish this library?

Please read the [Contribution contribution] page.

Thank you!

== Maintenance==
=== Branches ===
You can always get the latest stable release or the nightly build.
Every release version will has a stable branch.
The latest version (nightly build) with not yet release changes (new classes or patches) is located in the SVN Trunk / Head.
For further information check out the [Installation] page.

=== Unit tests ===
Using [http://www.phpunit.de/ PHPUnit], most of the classes have test cases.
Our server will run the tests frequently (every day), store results and send messages to our developers.

Of course, to run the tests you must have installed PHPUnit on your system.

You can run tests on console by typing {{{phpunit Tests_AllTests}}}.